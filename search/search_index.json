{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"Homepage","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"#icons-and-emojs","title":"Icons and Emojs","text":""},{"location":"instrukcja_analityka/","title":"Instrukcja analityka","text":""},{"location":"instrukcja_analityka/#7-przykazan-analityka-nyks","title":"7 przykaza\u0144 analityka Nyks","text":"<p>W codziennej pracy nie zapominaj o:</p> <ol> <li> <p>Umieszczaniu kodu, wynik\u00f3w i opis\u00f3w w zadaniu na kolejce JIRA. Pami\u0119taj, \u017ce mo\u017cesz podlinkowa\u0107 sw\u00f3j pull request na Github poprzez funkcje link \u2192 web link (wi\u0119cej przeczytaj poni\u017cej)</p> </li> <li> <p>Odpowiednim tagowaniu tabel kt\u00f3re produkujesz zgodnie z zasadami GDPR</p> </li> <li> <p>Dodawaniu raport\u00f3w cyklicznych i narz\u0119dzi do Raporty cykliczne oraz przelotki raportowej MEX-ANA</p> </li> <li> <p>W przypadku Looker Studio od\u015bwie\u017cania front-endu przy u\u017cyciu u\u017cytkownika technicznego oraz nadawania dost\u0119pu \u201cedit\u201d dla ca\u0142ego zespo\u0142u \u201cfin-mex-analytics\u201d</p> </li> <li> <p>W przypadku raport\u00f3w Tableau poinformowaniu u\u017cytkownik\u00f3w o procedurze otrzymania dost\u0119pu do danych - wi\u0119cej przeczytaj poni\u017cej</p> </li> <li> <p>Umieszczanie wynik\u00f3w analiz ad-hoc - je\u015bli s\u0105 plikami p\u0142askimi na zespo\u0142owym dysku</p> </li> <li> <p>Umieszczanie najciekawszych i rozbudowanych analiz produktowych na stronie Product Analytics</p> </li> </ol>"},{"location":"instrukcja_analityka/#grupy-sim","title":"Grupy SIM","text":"<p>Aby rozpocz\u0105\u0107 prac\u0119 nale\u017cy zobaczy\u0107, czy do Twojego konta s\u0105 dodane wszystkie dost\u0119py. Spis najbardziej potrzebnych grup znajdziesz w tym linku: link.</p> <p>Do grup mo\u017cesz si\u0119 doda\u0107 klikaj\u0105c na t\u0119 stron\u0119 - link, a nast\u0119pnie klikaj\u0105c w panelu po lewej stronie Grupy \u2192 moje cz\u0142onkostwo w grupach. Wystarczy, \u017ce skopiujesz nazw\u0119 grupy i wkleisz j\u0105 u g\u00f3ry w pasku wyszukiwania. Najlepiej dodawa\u0107 grupy z ko\u0144c\u00f3wk\u0105 manual. Do grupy dodajemy si\u0119 poprzez zaznaczenie checkboxa przy odpowiedniej nazwie i klikni\u0119cie u g\u00f3ry do\u0142\u0105cz do grupy. UWAGA ! aby doda\u0107 si\u0119 do grupy pami\u0119taj zawsze poda\u0107 uzasadnienie, dlaczego chcesz do\u0142\u0105czy\u0107 do grupy. Pro\u015bby bez podanego uzasadnienia s\u0105 odrzucane. Pro\u015bba o do\u0142\u0105czenie widoczna b\u0119dzie w pasku po lewej stronie \u017b\u0105dania i zatwierdzenia \u2192 Zarz\u0105dzaj moimi   zatwierdzeniami.</p>"},{"location":"instrukcja_analityka/#udostepnianie-danych-osobom-z-innych-zespoow","title":"Udost\u0119pnianie danych osobom z innych zespo\u0142\u00f3w","text":"<ul> <li>_gr_data_insiders  - osoby, kt\u00f3re chc\u0105 mie\u0107 dost\u0119p do przegl\u0105dania danych o GMV/revenue musz\u0105 wnioskowa\u0107 o dost\u0119p do tej grupy; oznakowanie dokument\u00f3w/raport\u00f3w oznacza dane wra\u017cliwe finansowe i musi by\u0107 oznakowane te\u017c tagiem: has_confidential_data</li> <li>_gr_3p_all - grupa dotyczy wszystkich os\u00f3b, kt\u00f3rzy s\u0105 w Allegro pl, nie maj\u0105 wgl\u0105du do danych wra\u017cliwych finansowych</li> </ul>"},{"location":"instrukcja_analityka/#tableau","title":"Tableau","text":"<p>Obecnie nie trzeba sk\u0142ada\u0107 ju\u017c request\u00f3w o dost\u0119p do Tableau. Wystarczy doda\u0107 si\u0119 do grup - link (dane poufne, takie jakie znajduj\u0105 si\u0119 w site Finance). Je\u015bli chodzi o sam dost\u0119p do Tableau to od grudnia 2023:  - [x] ka\u017cdy kto jest cz\u0142onkiem grupy _gr_tableau_access (kt\u00f3ra dziedziczy z _gr_3p_all or _gr_3p_AllegroPay, czyli ka\u017cdy kto jest 3P  ma dost\u0119p do Tableau.  - [x] licencja Viewera jest nadawana przy logowaniu si\u0119 do Tableau odbierana jest po 7 dniach nieaktywno\u015bci - [x] przy kolejnej pr\u00f3bie logowania jest automatycznie przywracana. Dotyczy to wszystkich site'\u00f3w - [x] proces odbierania i nadawania licencji jest praktycznie niezauwa\u017calny dla zwyk\u0142ego u\u017cytkownika. Formularz dost\u0119powy do Tableau zostanie zmieniony i b\u0119dzie dotyczy\u0107 tylko r\u00f3l Creatora.</p>"},{"location":"instrukcja_analityka/#gcp-i-airflow","title":"GCP i Airflow","text":"<p>Konsola Big Query - pracujemy na 2 projektach: sc-10231-finance-bq-prod (produkcja) i sc-10231-finance-bq-dev (test).</p> <p>Airflow produkcyjny</p> <p>Airflow testowy</p>"},{"location":"instrukcja_analityka/#tabele","title":"Tabele","text":""},{"location":"instrukcja_analityka/#spis-tabel","title":"Spis tabel","text":"<p>Spis najbardziej popularnych i wykorzystywanych tabel w zespole mo\u017cna znale\u017a\u0107 w tym linku: link.  W Allegro wci\u0105\u017c udoskonalana jest og\u00f3lna wiedza na temat tabel. W Alation po wpisaniu nazwy tabeli uzyskasz wiedz\u0119 na temat schemat\u00f3w tabel, opis\u00f3w kolumn, a najwa\u017cniejsze na temat grup w SIM, do kt\u00f3rych nale\u017cy si\u0119 doda\u0107, aby m\u00f3c z danej tabeli korzysta\u0107. Wiedza ta znajduje si\u0119 w cz\u0119\u015bci Data Access:</p> <p> </p> <p>Staramy si\u0119 na bie\u017c\u0105co opisywa\u0107 nasze najwa\u017cniejsze tabele zespo\u0142owe. Niekt\u00f3re opisy mo\u017cna znale\u017a\u0107 pod tym linkiem: link.</p>"},{"location":"instrukcja_analityka/#tagowanie-tabel","title":"Tagowanie tabel","text":"<p>W zwi\u0105zku z RODO i prowadzon\u0105 polityk\u0105 w Allegro zwracamy szczeg\u00f3ln\u0105 uwag\u0119, aby ka\u017cda tabela na GCP by\u0142a otagowana. Szczeg\u00f3\u0142owe informacje na temat tego procesu znajdziesz w poni\u017cszych linkach:</p> <p>GDPR process of describing data sets</p> <p>Data processing rules for analysts</p> <p>RODO Alation</p> <p>Przyk\u0142ad 1 u\u017cycie kodu na utworzenie tabeli bez okre\u015blenia czasu wyga\u015bni\u0119cia plus dodanie labelek</p> <pre><code>CREATE TABLE\n `sc-10231-finance-bq-dev.finance.nyks_629_fee_deduction_users_with_active_process_sierpien`\nPARTITION BY v_date\nOPTIONS\n(\n description = '',\n labels = [('allegro__pers__id_data', '1'),\n           ('allegro__pers__sensitive_data', '0'),\n           ('allegro__dgov__days_to_expire', '0'),\n           ('allegro__dgov__trunc_dataset', '0')\n          ]\n)\nAS\nSELECT\n userID,\n startDate,\n timestamp_,\n v_date\nFROM `sc-10231-finance-bq-prod.billing.fee_deduction_report_users_with_active_process`\nWHERE v_date BETWEEN '2023-08-01' AND '2023-08-31'\n;\n</code></pre> <p>Przyk\u0142ad 2 u\u017cycie kodu na utworzenie tabeli z dat\u0105 wyga\u015bni\u0119cia plus dodanie labelek <pre><code>CREATE TABLE `sc-10231-finance-bq-dev.finance.nyks_629_fee_deduction_users_with_active_process_sierpien`\nPARTITION BY v_date\nOPTIONS\n(\n description = '',\n labels = [('allegro__pers__id_data', '1'),\n           ('allegro__pers__sensitive_data', '0'),\n           ('allegro__dgov__days_to_expire', '0'),\n           ('allegro__dgov__trunc_dataset', '0')\n          ],\nexpiration_timestamp= TIMESTAMP '2023-12-03 12:34:56')\n\n\nAS\nSELECT\n userID,\n startDate,\n timestamp_,\n v_date\nFROM `sc-10231-finance-bq-prod.billing.fee_deduction_report_users_with_active_process`\nWHERE v_date BETWEEN '2023-08-01' AND '2023-08-31'\n;\n</code></pre></p> <p>Przyk\u0142ad 3 u\u017cycie kodu na edycj\u0119 labelek w ju\u017c istniej\u0105cej tabeli</p> <pre><code>alter table `sc-10231-finance-bq-prod.campaign.campaigns_offer_criteria`\nset options\n(\n  labels = [('allegro__pers__id_data', '1'), ('allegro__pers__sensitive_data', '0'), ('allegro__dgov__days_to_expire', '0'), ('allegro__dgov__trunc_dataset', '0')]\n)\n;\n</code></pre> <p>W dalszej cz\u0119\u015bci o konfiguracji Daga znajduj\u0105 si\u0119 informacje jakie warunki nale\u017cy doda\u0107 w Dagu, aby przy tworzeniu tabeli automatycznie dodawa\u0142 labelki.</p>"},{"location":"instrukcja_analityka/#jira","title":"Jira","text":""},{"location":"wiki/","title":"Python","text":""},{"location":"wiki/#praca-z-bq","title":"praca z BQ","text":""},{"location":"wiki/#1","title":"#1","text":"<pre><code>##to dziala domyslnie\n%%bigquery df\nSELECT * FROM tabela\n</code></pre>"},{"location":"wiki/#2","title":"#2","text":"<pre><code>#import pakietow\nfrom google.cloud import bigquery\n#inicjacja polaczenia\nclient = bigquery.Client()\n#odpytanie o projekt\nprint(\"Client creating using default project: {}\".format(client.project))\n#zapytanie\nquery = '''SELECT * FROM `tabela`'''\n#zapisanie danych do DataFrame\ndf = client.query(query).resoult().to_dataframe()\n</code></pre>"},{"location":"wiki/#3-zapytanie-z-parametrem-1","title":"#3 zapytanie z parametrem #1","text":"<pre><code>#definiowanie parametru\ndae_ = '2024-03-01'\n#definiowanie zapytania\nquery = f''' select * from dual where dt = \"{date_}\" '''\n</code></pre>"},{"location":"wiki/#4-zapytanie-z-parametrem-2","title":"#4 zapytanie z parametrem #2","text":"<pre><code>#definiowanie zapytania\nquery = ''' select * from dual where dt = @date_'''\n#definiowanie parametrow\nparams = [\n            bigquery.ScalarQueryParameter('date','STRING', date_)\n          ]\njob_config = bigquery.QueryjobConfig(query_parameter=parms)\ndf = client.query(query,job_config=job_config).resoult().to_dataframe()\n</code></pre>"},{"location":"wiki/#cost-estimator","title":"cost estimator","text":"<pre><code># cost estimator\njob_config = bigquery.QueryJobConfig()\njob_config.dry_run = True\njob_config.use_query_cache = False\nquery_job = bigquery.Client().query(\n  (query),\n    location=\"EU\",\n    job_config=job_config\n)\ndata_amt = query_job.total_bytes_processed\nprint(\"{} GB will be processed which is roughly {} USD cost\".format(round(data_amt / 1024**3,2), round(data_amt / 1024**4 * 5,2)))\n</code></pre>"},{"location":"wiki/#zapisanie-wynikow-zapytania-do-tabeli-na-bq","title":"zapisanie wynikow zapytania do tabeli na BQ","text":"<pre><code>from google.cloud import bigquery\nimport pandas\n\ndataset_id = 'logistics'\ndataset = client.get_dataset(dataset_id)\n\ntable_ref = dataset.table('ai_nb_test_table')\njob_config = bigquery.QueryJobConfig(\n    destination=table_ref\n)\n\n# Start the query, passing in the extra configuration.\nquery_job = client.query(query, location=\"EU\", job_config=job_config)\n\nquery_job.result()  # Waits for the query to finish\nprint(\"Query results loaded to table {}\".format(table_ref.path))\n</code></pre>"},{"location":"zadania/","title":"Zadania","text":""},{"location":"zadania/#2024-03-01","title":"[2024-03-01]","text":""},{"location":"zadania/#nyks-739-zatory-platnicze","title":"NYKS-739 Zatory Platnicze","text":"<p>NYKS-45 NYKS-467 NYKS-739</p> <p>Sprawdzenie danych:</p> <p>Sprawdzamy sekcje \"Wp\u0142aty otrzymane w 2023 roku\"  Sprawdzamy sekcje \"Wp\u0142aty otrzymane w 2023 roku\" (wiersz 9 w excelu) dla np. allegro.cz z raportem zafiltorwanym zgodnie z obrazkiem:</p> <p></p> <p>Ponizej kod do wygenerowania detalicznych danych po stronie raportu w tableau.  Kliknij, aby zobaczy\u0107 kod <pre><code>--Creditors by country--\n\nCREATE TABLE `sc-10231-finance-bq-dev.kubansa.balance_creditors`\n--PARTITION BY _PARTITIONDATE\nOPTIONS(\n  --expiration_timestamp = TIMESTAMP \"2028-01-01 00:00:00 UTC\",\n  description=\"Tabela tymczasowa\",\n  labels=[(\"allegro__pers__id_data\", \"0\"), (\"allegro__pers__sensitive_data\", \"0\"), (\"allegro__dgov__days_to_expire\", \"5\"), (\"allegro__dgov__trunc_dataset\", \"0\"),(\"allegro__dgov__undeletable\", \"1\")]\n) as \n\nWITH balance_creditors AS (\nSELECT DISTINCT\n  CAST(userid AS NUMERIC) AS userid,\n  DATE(SUBSTR(balancedate, 1, 10)) AS bi_month,\n  CAST(balance AS NUMERIC) AS balance,\n  marketplaceid,\n  currency\nFROM `sc-9620-datahub-stream-prod.datahub.pl_allegro_finance_billingfour_monthlysummarycreatedv4`\nWHERE _partitiondate = '2024-01-01'\n  AND CAST(balance AS NUMERIC) &gt; 0\n),\n\nusers as\n(\n      select\n            distinct cast(user_id as numeric) as account_id,\n            case\n                when cleared.topic_timestamp is not null then 'cud'\n                when cleared.user_cud_timestamp is not null then 'cud'\n                when flags.account_closed then 'closed'\n                when flags.account_resolved then 'contract_resolved'\n                when flags.account_terminated then 'contract_terminated'\n                when flags.account_blocked then 'blocked'\n                when flags.account_frozen then 'frozen'\n                when flags.account_paused then 'paused'\n            else 'active'\n            end  as account_status,\n            if(flags.company, 'company', 'person') as account_type,\n            lower(address.country_code) as residence_country_code,\n            ifnull((case when flags.verified_company then 1 else 0 end),0) as verifiedcompany\n        from\n          `sc-9369-dataengineering-prod.users.users`\n        where\n            _partitiondate = '2023-12-31'\n),\ncountries as (\n    select distinct \n        cn_iso_name as iso_name,\n        cn_country_name as country_name,\n        case \n            when cn_country_name in ('Austria', 'Belgia', 'Bu\u0142garia', 'Chorwacja',\n                                    'Cypr', 'Czechy', 'Dania', 'Estonia', 'Finlandia',\n                                    'Francja', 'Grecja', 'Hiszpania', 'Holandia', 'Irlandia',\n                                    'Litwa', 'Luksemburg', 'Malta', 'Niemcy', 'Polska',\n                                    'Portugalia','Rumunia','Szwecja','S\u0142owacja', 'S\u0142owenia',\n                                    'W\u0119gry', 'W\u0142ochy','\u0141otwa') then 'EU'\n            else 'NONEU' end as country_group\n    from\n        `sc-9369-dataengineering-prod.dwh_import.tl_ga6_country_names`\n    where\n        cn_country_name &lt;&gt; \"Jan Mayen\"\n),\nusers_join as(\n    select\n        account_id,\n        account_status,\n        account_type,\n        residence_country_code,\n        verifiedcompany,\n        iso_name,\n        country_name,\n        country_group\n    from\n        users t\n        left join countries tt on (t.residence_country_code = lower(tt.iso_name))\n)\nselect\n    date_trunc(cast(bi_month as date), month) as bi_month,\n    userid,\n    iso_name as iso_name,\n    country_name as country_name,\n    country_group as country_group,\n    us_company as us_company,\n    sum(balance) as balance,\n    current_date() as date_insert_row,\n    marketplaceid,\n    currency,\n    is_IC\nfrom\n    (\n        select\n            bi_month as bi_month,\n            t1.userid as userid,\n            ifnull(iso_name, \"brak danych\") as iso_name,\n            ifnull(country_name, 'brak danych') as country_name,\n            case\n                when country_group = \"EU\" then case\n                    when country_name = \"Polska\" then \"Polska\"\n                    else \"Unia Europejska\"\n                end\n                when country_group = \"NONEU\" then case\n                    when country_name = \"Wielka Brytania\" then \"Wielka Brytania\"\n                    else \"Pozosta\u0142e kraje\"\n                end\n                else \"brak danych\"\n            end as country_group,\n            cast(\n                ifnull(cast(verifiedcompany as numeric), 0) as string\n            ) as us_company,\n            sum(balance) as balance,\n            t1.marketplaceid,\n            t1.currency,\n            CASE WHEN t3.userid IS NOT NULL THEN 'IC' ELSE 'External' END AS is_IC\n        from\n            balance_creditors t1\n            left join users_join t2 on t1.userid = t2.account_id\n            LEFT JOIN `sc-10231-finance-bq-prod.general_finance.ic_companies_userid_daily` t3 ON (t1.userid = CAST(t3.userid AS NUMERIC) AND t3.dt = '2023-12-31')\n        group by\n            bi_month,\n            userid,\n            iso_name,\n            country_name,\n            country_group,\n            us_company,\n            marketplaceid,\n            currency,\n            is_IC\n    )\nwhere\n    balance &lt;&gt; 0\ngroup by\n    bi_month,\n    userid,\n    iso_name,\n    country_name,\n    country_group,\n    us_company,\n    marketplaceid,\n    currency,\n    is_IC\n</code></pre> </p> <p>    Tu kod po stronie zatorow do porownania z raportem na tableau:   Kliknij, aby zobaczy\u0107 kod <pre><code>with dane as (\n\nselect\nbf.userid,\nsum(debits_to_sum) debits, \nsum(credits_to_sum) credits,\nsum(debits_to_sum) +sum(credits_to_sum) dif_deb_cred,\nsum(invoice_payment_0m_to_sum+ invoice_payment_14d_to_sum+ invoice_payment_5d_to_sum+ invoice_payment_30_to_sum+ invoice_payment_30_60_to_sum+ invoice_payment_60_90_to_sum+ invoice_payment_90_120_to_sum+ invoice_payment__120_to_sum ) payments_all,\n\ncase when \nsum(credits_to_sum+ wplywy_na_plus_2022_to_sum+ wplywy_na_current_2022_to_sum -\nwplywy_na_plus_2023_to_sum - wplywy_na_current_2023_to_sum - \n(case \nwhen balance_na_plus_2023_to_sum - wplywy_na_plus_2023_to_sum &gt; 0\nthen balance_na_plus_2023_to_sum - wplywy_na_plus_2023_to_sum\nelse 0\nend)\n-(invoice_payment_0m_to_sum+ invoice_payment_14d_to_sum+ invoice_payment_5d_to_sum+ invoice_payment_30_to_sum+ invoice_payment_30_60_to_sum+ invoice_payment_60_90_to_sum+ invoice_payment_90_120_to_sum+ invoice_payment__120_to_sum )) &gt; 0 then\nsum(credits_to_sum+ wplywy_na_plus_2022_to_sum+ wplywy_na_current_2022_to_sum -\nwplywy_na_plus_2023_to_sum - wplywy_na_current_2023_to_sum - \n(case \nwhen balance_na_plus_2023_to_sum - wplywy_na_plus_2023_to_sum &gt; 0\nthen balance_na_plus_2023_to_sum - wplywy_na_plus_2023_to_sum\nelse 0\nend)\n-(invoice_payment_0m_to_sum+ invoice_payment_14d_to_sum+ invoice_payment_5d_to_sum+ invoice_payment_30_to_sum+ invoice_payment_30_60_to_sum+ invoice_payment_60_90_to_sum+ invoice_payment_90_120_to_sum+ invoice_payment__120_to_sum )) end  as check_old_invoice_2,\n\nsum(wplywy_na_plus_2022_to_sum)wplywy_na_plus_2022_to_sum,\nsum(wplywy_na_current_2022_to_sum) wplywy_na_current_2022_to_sum,\nsum(wplywy_na_plus_2023_to_sum)wplywy_na_plus_2023_to_sum,\nsum(wplywy_na_current_2023_to_sum)wplywy_na_current_2023_to_sum,\nsum(\ncase \nwhen balance_na_plus_2023_to_sum - wplywy_na_plus_2023_to_sum &gt; 0\nthen balance_na_plus_2023_to_sum - wplywy_na_plus_2023_to_sum\nelse 0\nend) as sum_balance_na_plus_2023_NEW\n\nfrom  `sc-10231-finance-bq-dev.billing.before_final_2023` bf\n    join `sc-10231-finance-bq-dev.billing.users_2023` u\n    on bf.userid=u.userid \nwhere marketplaceid = 'allegro-cz'\nand invoice_date between '2023-01-01' and '2024-01-01'\ngroup by 1 \n)\n,\n\ndane2 as (\nselect *, ifnull(debits,0)+ifnull(payments_all,0)+ ifnull(check_old_invoice_2,0) as check_wy from dane \n)\n\n\nselect * from dane2 where userid = '114477385'\norder by check_wy\n</code></pre> </p> <p></p>"},{"location":"zadania/#nyks-820-kke","title":"NYKS-820 KKE","text":""},{"location":"zadania/#2023-04-01","title":"[2023-04-01]","text":""}]}